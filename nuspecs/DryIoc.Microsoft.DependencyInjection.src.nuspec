<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>DryIoc.Microsoft.DependencyInjection.src</id>
    <version>6.0.0-preview-02</version>
    <authors>Maksim Volkau</authors>
    <copyright>Copyright Â© 2013-2021 Maksim Volkau</copyright>
    <projectUrl>https://github.com/dadhi/DryIoc</projectUrl>
    <license type="expression">MIT</license>
    <icon>logo.png</icon>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>DryIoc adapter for Microsoft.Extensions.DependencyInjection</description>
    <tags>DryIoc;Dependency Injection;DI;IoC;Asp;AspNet;vNext;AspNetCore;NetCore</tags>
    <releaseNotes>
<![CDATA[

## v6.0.0

- Depends on the DryIoc v5
- Depends on the Microsoft.Extensions.DependencyInjection.Abstractions 6.0.0-preview.7.21377.19
- Provides the implementation of IServiceProviderIsService
- Provides the implementation of ISupportRequiredService


## v5.1.0

- #364: [MS.DI] Allow to provide RegistrySharing parameter to DryIocServiceProviderFactory to avoid cache dropping
- Updated DryIoc to v4.7.0

## v5.0.0

Updated DryIoc to v4.5.0 with the performance improvements and the new features

- added: 328 - Now you may use `Rules.WithVariantGenericTypesInResolvedCollection()`
- added: 331 - [MS.DI] Add the Rules.WithServiceProviderGetServiceShouldThrowIfUnresolved

]]>
    </releaseNotes>
    <dependencies>
      <group>
        <dependency id="DryIoc" version="4.7.0" />
        <dependency id="Microsoft.Extensions.DependencyInjection.Abstractions" version="3.1.8" />
      </group>
    </dependencies>
    <contentFiles>
      <files include="cs/**/*.*" buildAction="Compile" />
    </contentFiles>
  </metadata>
  <files>
    <file src="..\LICENSE.txt" />
    <file src="..\nuspecs\DryIoc.snk" />
    <file src="..\logo\logo128.png" target="logo.png" />

    <!-- NetStandard2.0 -->
    <file src="..\src\DryIoc.Microsoft.DependencyInjection\DryIocAdapter.cs" target="contentFiles\cs\netstandard2.0\DryIoc.Microsoft.DependencyInjection" />

  </files>
</package>
